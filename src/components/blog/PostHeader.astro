---
import Bullet from '~/components/blog/Bullet.astro'
import Link from '~/components/common/Link'
import { type Post } from '~/utils/content'
import { keyComparator } from '~/utils/sorting'

interface Props {
  post: Post
}

const { post } = Astro.props

const tags = [
  ...post.data.skills.map(s => ({ tag: s.id, href: `/skills/${s.id}` })),
  ...post.data.tags.map(t => ({ tag: t, href: `/tags/${t}` })),
].sort(keyComparator(t => t.tag))
---

<header class="flex flex-col gap-3 text-center centered-header sm:text-left">
  <h1 class="text-3xl text-neutral-1000 dark:text-neutral-0 sm:text-4xl">{post.data.title}</h1>
  <div class="text-neutral-800 dark:text-neutral-200">
    by <address class="inline font-bold not-italic text-neutral-1000 dark:text-neutral-0">
      {post.data.author}
    </address>
    <Bullet />on <time
      datetime={post.data.date.toISOString().split('T')[0]}
      class="font-bold text-neutral-1000 dark:text-neutral-0"
      >{
        post.data.date.toLocaleDateString('en-US', {
          weekday: undefined,
          day: 'numeric',
          month: 'short',
          year: 'numeric',
        })
      }</time
    ><Bullet /><span class="font-bold text-neutral-1000 dark:text-neutral-0">0{/* TODO */} min</span
    > read
  </div>
  <ul class="flex flex-wrap justify-center gap-4 sm:justify-start">
    {
      tags.map(({ tag, href }) => (
        <li>
          <Link {href}>#{tag}</Link>
        </li>
      ))
    }
  </ul>
</header>
